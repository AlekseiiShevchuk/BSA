	>>>>>>>   «адание 0:   <<<<<<<<<

ћанипул€ции по подготовительному заданию отображены в репозитории
https://github.com/AlekseiiShevchuk/BSA

команды использовавшиес€ в задании:

git init
- создает новый репозиторий в текущей директории

git add filename.ext
- добавл€ем файл в отслеживаемые

git commit -m "task: title (description)"
- коммитим изменени€

git branch developer
- создает новую ветку developer

git branch
- смотрим список веток

git checkout developer
- переходим в ветку developer
 
git merge  develop-feature1
сливаем ветку  develop-feature1 в текущую

git status
- смотрим текущее состо€ние отслеживаемых файлов
 
git push origin branchName
- отправл€ем коммиты на сервер в ветку branchName

git log
- смотрим историю коммитов

git push origin --delete branchName
 - удал€ем ветку с удаленного хранилища
 
git branch -d branchName
- удал€ем ветку в локальном хранилище
 
git push --tags
- делаем пуш тегов


	>>>>>>>   «адание 1.1:   <<<<<<<<<
 оманда котора€ выводит сообщени€ и автора всех коммитов из ветки develop-feature1, которые сделаны за последние 3 часа и которых нет в родительских ветках (develop, master). —ортировка по дате, первые более новые.

git log develop..develop-feature1 --since 3.h --pretty=format:"%an - %s" --topo-order

	>>>>>>>   «адание 1.2:   <<<<<<<<<
 оманда котора€ выводит дл€ каждого коммита из веток master, develop, в сообщении которых есть упоминание заданного номера задачи (допустим задачи 231), его сообщение, автора и дату. —ортировка по дате, первые более новые.

git log 'master' 'developer' --grep="213:" --pretty=format:"%ad [%an] %s" --topo-order

	>>>>>>>   «адание 2:   <<<<<<<<<
	
»збирательное сли€ние обеспечиваетс€ командой
git cherry-pick commit хеш_нужного коммита

предварительно нужно зайти в ветку девелопер
git checkout develop

	>>>>>>>   «адание 3:   <<<<<<<<<
	
1) ¬ыполн€ем команду
git rebase -i HEAD~2       //-i изначает интерактивнй режим
гит откроет последние два коммита текущей ветки в редакторе по умолчанию
далее необходимо напротив необходимых дл€ редактировани€ коммитов заменить слово pick на reword
сохран€м файл и выходим из редактора
2) выполн€ем команду
git commit --amend
вносим необходимые правки в текст комментари€ дл€ коммита
3) выполн€ем команду
git rebase --continue

повтор€ем последние две команды дл€ оставшихс€ коммитов